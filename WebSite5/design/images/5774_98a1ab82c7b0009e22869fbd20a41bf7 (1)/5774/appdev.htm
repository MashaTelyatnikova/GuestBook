<!doctype HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Language" content="ru">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="css.css" type="text/css">
<title>Технология Разработки Приложений JavaScript.</title></head>
<BODY>
<h5><a href="contents.htm">Оглавление</a> | <a href="getstart.htm">Назад</a>
| <a href="partfeat.htm">Вперёд</a>
| <a href="bklast.htm">Индекс</a><BR></h5>
<HR><h1>Глава 3&nbsp; <A NAME="1042057"></A>
Технология Разработки Приложений JavaScript</h1><p><A NAME="1065275"></A>
В этой главе рассматриваются вопросы процесса разработки Вашего приложения, 
такие как использование компилятора приложений JavaScript и Менеджера Приложений Netscape-серверов 
для инсталяции или отладки Вашего приложения.<br>
Информацию об использовании только клиентского JavaScript см. в книге
<a TARGET="_blank" href="../clientguide13/index.htm"><EM>Клиентский JavaScript 1.3. Руководство</EM>.</a></p>
<p><A NAME="1073711"></A>В этой главе имеются следующие разделы:</p>
<ul><LI><A NAME="1073715"></A><A HREF="#1058729">Основные Этапы Создания 
Приложения</A><LI><A NAME="1073719"></A><A HREF="#1043475">Менеджер Приложений JavaScript. 
Обзор.</A><LI><A NAME="1073723"></A><A HREF="#1049038">Создание Исходных 
файлов Приложения</A><LI><A NAME="1073727"></A><A HREF="#1046520">Компиляция 
Приложения</A><LI><A NAME="1073731"></A><A HREF="#1043531">Инсталяция Нового 
Приложения</A><LI><A NAME="1073735"></A><A HREF="#1043589">Управление Доступом 
к Приложению</A><LI><A NAME="1073739"></A><A HREF="#1043597">Модификация 
Приложения</A><LI><A NAME="1073743"></A><A HREF="#1043603">Удаление Приложения</A><LI><A NAME="1073747"></A><A HREF="#1043609">
Старт, Остановка и Рестарт Приложения</A><LI><A NAME="1073751"></A><A HREF="#1057959">
Запуск Приложения</A><LI><A NAME="1073755"></A><a href="#1046343">Отладка Приложения</a></LI><LI><A NAME="1073759"></A>
<a href="#1048911">Публикация Приложения</a><LI><A NAME="1073763"></A><A HREF="#1043639">Менеджер Приложений. Детали.</A></LI></ul>
<h2><A NAME="Basic Steps in Building an Application"></A><A NAME="1058729"></A>
Основные Этапы Создания Приложения</h2><HR><p><A NAME="1069863"></A>
Обычно HTML статичен: после того как Вы написали HTML-страницу, её содержимое 
фиксируется. Фиксированное содержимое пересылается&nbsp; с сервера клиенту, 
когда клиент выполняет доступ к странице по её URL. С помощью JavaScript Вы 
можете создавать HTML-страницы, которые могут изменяться вслед за изменением 
данных или в ответ на действия пользователя. На <a href="#1058738">Рисунке 3.1</a> 
показана базовая процедура создания и запуска приложения JavaScript.</p>
<h6><A NAME="1058738"></A>Рисунок 3.1&nbsp;&nbsp;&nbsp; Создание и Запуск Приложения JavaScript</h6>
<P><IMG SRC="graphics/Devcycle.gif" width="612" height="385"></P>
<p><A NAME="1058740"></A>Для создания приложения JavaScript Вы должны выполнить следующие шаги:</p>
<OL><LI><A NAME="1074479"></A>
Создать исходные файлы. Исходные файлы могут быть HTML-файлами с внедрённым JavaScript, 
файлами, содержащими только JavaScript, или исходными файлами на Java. (См. <A HREF="#1049038">"Создание 
Исходных Файлов Приложения"</A>.)</LI><br>
<A NAME="1074626"></A>Заметьте, что Виртуальная Машина JavaScript (VM), используемая в Netscape Enterprise Server 4.0, 
реализует значительные улучшения в процессинге локальных переменных 
(то есть переменных, объявленных внутри функций), по сравнению с NES 
3.6. Отсюда следует, что нужно минимизировать использование глобальных 
переменных (то есть тех, которые объявлены между тэгами <CODE>&lt;server&gt;</CODE> 
и <CODE>&lt;/server&gt;</CODE>) и переписать приложения так, чтобы максимально 
использовать функции. Это значительно увеличит скорость работы приложения.<LI><A NAME="1074485"></A>
Построить приложение с использованием компилятора приложений JavaScript для 
создания исполняемого байт-кода (файла<CODE> .web</CODE>). (См. <A HREF="#1046520">"Компиляция 
Приложения"</A>.) Скомпилировать исходные файлы Java в файлы классов.<LI><A NAME="1056951"></A>
Опубликовать web-файл, все необходимые файлы HTML, изображений и клиентского JavaScript 
и откомпилированные файлы Java-классов в соответствующие директории на сервере. 
Вы можете использовать Netscape Web Publisher для публикации Ваших файлов, как 
описано в книге <EM>Web Publisher User's Guide</EM>.</LI><LI><A NAME="1045926"></A>
Установить приложение в первый раз (см. <A HREF="#1043531">"Инсталяция Нового 
Приложения"</A>) с помощью Менеджера Приложений JavaScript. Вы 
можете также использовать Менеджер Приложений для рестарта приложения после 
его перестроения/rebuilding (см. <A HREF="#1043609">"Старт, Остановка и 
Рестарт Приложения"</A>). Инсталяция или рестарт приложения заставляют машину 
выполнения JavaScript запустить это приложение на выполнение.<br><A NAME="1045929"></A>
После инсталяции приложения Вам может потребоваться защитить его. См. раздел <A HREF="#1048911">"Публикация Приложения"</A>.
Вам не нужно рестартовать приложение после его начальной инсталяции.<LI><A NAME="1051130"></A>
Запустить приложение, щёлкнув Run в Менеджере Приложений или загрузив URL 
приложения в браузер. (См. <A HREF="#1057959">"Запуск Приложения"</A> и <A HREF="#1043564">"URL 
Приложения"</A>.) Например, чтобы запустить Hello World, загрузите в браузер<CODE> http://</CODE><I><CODE>server.domain</CODE></I><CODE>/world/</CODE>. 
Вы можете выполнить также отладку приложения, щёлкнув Debug в Менеджере 
Приложений. (См. <A HREF="#1046343">"Отладка Приложения"</A>.)<LI><A NAME="1045941"></A>
После того как Вы завершили разработку и тестирование Вашего приложения, Вам 
нужно будет опубликовать его, чтобы сделать доступным для пользователей. 
Процесс публикации обычно включает в себя инсталяцию приложения на конечном 
сервере и изменение прав доступа. (См. <A HREF="#1048911">"Публикация Приложения"</A>.)</LI></OL>
<p><A NAME="1050635"></A>Прежде чем Вы сможете разрабатывать приложения на JavaScript, Вам нужно будет 
запустить машину выполнения на сервере и, возможно, защитить Менеджер Приложений JavaScript 
от неавторизованного доступа. Дополнительно см. разделы <A HREF="getstart.htm#1011926">"Информация 
Конфигурации"</A> и <a href="getstart.htm#1013897">Глава&nbsp;2, "Введение."</a>.</p>
<h4><A NAME="JavaScript Application Manager Overview"></A><A NAME="1043475"></A>Менеджер Приложений
JavaScript. Обзор.</h4><HR><p><A NAME="1043476"></A>
Прежде  учиться создавать приложения JavaScript, Вы должны ознакомиться с 
Менеджером Приложений JavaScript. Вы можете использовать Application Manager для выполнения следующих задач:</p>
<p><A NAME="1043478"></A>Добавления нового JavaScript-приложения.</p>
<P><A NAME="1043479"></A>Модификации любых атрибутов уже установленного приложения.<P><A NAME="1043480"></A>
Останова, старта и рестарта установленного приложения.<P><A NAME="1043481"></A>
Запуска и отладки активного приложения.<P><A NAME="1043482"></A>
Удаления установленного приложения.<P><A NAME="1043483"></A>
Application Manager сам является приложением на JavaScript, демонстрирующим мощь 
и гибкость JavaScript. Вы запускаете JavaScript Application Manager по 
следующему URL в Navigator'е:</P>
<PRE><A NAME="1054762"></A>http://<I><CODE>server.domain</CODE></I>/appmgr</PRE>
<p><A NAME="1073967"></A>
В ответ Application Manager отобразит страницу, показанную на <A HREF="#1058952">
Рисунке 3.2</A> для Netscape Enterprise Server 3.x и на Рисунке 3.3 - для Enterprise Server 4.0.</p>
<h6><A NAME="1058952"></A>
Рисунок 3.2&nbsp;&nbsp;&nbsp;  Application Manager в Enterprise Server 3.x</h6>
<P><IMG SRC="graphics/Appmgr2.gif" width="623" height="598"></P>
<h6><br><A NAME="1074164"></A>Рисунок 3.3&nbsp;&nbsp;&nbsp;  Application Manager в Enterprise Server 4.0</h6>
<p><IMG SRC="graphics/Appmgr4.gif" width="722" height="500"></P>
<p><A NAME="1074157"></A>
Application Manager отображает в прокручиваемом левом фрэйме (кадре/окне) все 
приложения JavaScript, установленные в данный момент на сервере. Выберите нужное 
приложение, щёлкнув на его имени в прокручиваемом списке.</p>
<p><A NAME="1043518"></A>
Правый фрэйм отображает для выбранного приложения следующую информацию:</p>
<ul><LI><A NAME="1043519"></A>
название приложения в верхней части фрэйма<LI><A NAME="1043520"></A>
путь к web-файлу приложения на сервере<LI><A NAME="1043521"></A>
начальную страницу и страницу по умолчанию<LI><A NAME="1059795"></A>
максимальное количество соединений с БД, допустимых для предопределённого 
объекта <CODE>database</CODE><LI><A NAME="1043522"></A>
внешние библиотеки (если имеются)</LI><LI><A NAME="1043523"></A>
технику обслуживания объекта<CODE> client</CODE><LI><A NAME="1043526"></A>
статус приложения: <I>active</I> или <I>stopped</I> (Пользователи могут 
запускать только активные приложения. Остановленные приложения недоступны.)</LI></ul><p><A NAME="1043527"></A>
Описание этих полей см. в разделе <A HREF="#1043531">"Инсталяция Нового Приложения"</A>.</p>
<p><A NAME="1060850"></A>Для добавления нового приложения щёлкните вверху кнопку Add Application.</p>
<p><A NAME="1043528"></A>Щёлкните Configure (в Enteprise Server 3.x) или Preferences (в Enterprise Server 4.0) 
для конфигурирования установок по умолчанию для Application Manager.<br>
<A NAME="1074208"></A>
Щёлкните Documentation, чтобы перейти на страницу технической поддержки Netscape JavaScript, 
где имеются ссылки на разнообразную документацию. Щёлкните Help для получения 
дополнительных инструкций об использовании Application Manager.</p>
<h4><A NAME="Creating Application Source Files"></A><A NAME="1049038"></A>
Создание Исходных Файлов Приложения</h4><HR><p><A NAME="1049016"></A>
Первым шагом на пути создания приложения JavaScript будет создание и 
редактирование исходных файлов с кодом. Файл с расширением web для приложения JavaScript 
может быть исходным файлом одного из двух видов:</p>
<ul><LI><A NAME="1049017"></A>
Файлом со стандартным HTML или с JavaScript, внедрённым в HTML. Эти файлы 
имеют расширение .<CODE>html</CODE> или .<CODE>htm</CODE>.</LI><LI><A NAME="1049021"></A>
Файлом только с функциями JavaScript. эти файлы имеют расширение .<CODE>js</CODE>.</LI>
</ul><p><A NAME="1052469"></A>
Если Вы используете JavaScript в HTML-файле, Вы обязаны следовать правилам, 
указанным в разделе <A HREF="jsserv.htm#1022266">"Внедрение JavaScript в HTML"</A>.</p>
<p><A NAME="1049022"></A>
Не используйте никаких специальных тэгов в файлах <CODE>.js</CODE>; компилятор 
приложений JavaScript на сервере и интерпретатор JavaScript на стороне клиента 
считают такие файлы написанными на JavaScript. Поскольку HTML-файл используется 
и на клиенте, и на сервере, один файл JavaScript обязан использоваться либо на 
сервере, либо на клиенте; он не может использоваться и там, и там. Следовательно, 
файл JavaScript может содержать либо клиентский, либо серверный JavaScript, но 
один файл не может содержать и клиентские, и серверные объекты или функции.</p>
<p><A NAME="1049026"></A>
Компилятор приложений JavaScript компилирует и связывает HTML- и JavaScript-файлы, 
содержащие серверный JavaScript, в единый платформонезависимый байт-код web-файла 
(имеющего расширение <CODE>.web)</CODE>, как описано в разделе
<A HREF="#1046520">"Компиляция Приложения"</A>.</p>
<p><A NAME="1049067"></A>
Вы инсталируете web-файл, запускаемый машиной выполнения JavaScript, как описано 
в разделе <A HREF="#1043531">"Инсталяция Нового Приложения"</A>.</p>
<h4><A NAME="Compiling an Application"></A>
<A NAME="1046520"></A>Компиляция Приложения</h4><HR><p><A NAME="1046522"></A>
Вы компилируете приложение JavaScript, используя компилятор приложений JavaScript, <CODE>jsac</CODE>. 
Компилятор создаёт web-файл из исходных файлов на языках HTML и JavaScript.</p>
<h6>Примечание</h6><p> <A NAME="1074394"></A>
Netscape Enterprise Server 4.0 поддерживает компилятор JavaScript Application Compiler 
версии 24.13. Заметьте, что приложение, скомпилированное с&nbsp; использованием "=" 
в качестве операции Equal, не сможет использовать новый компилятор. Вы обязаны 
использовать "==" в качестве операции Equal (==).</p>
<p><A NAME="1054433"></A>
Для облегчения доступа к компилятору Вам может понадобиться добавить директорию, 
в которой он установлен, в переменную окружения <CODE>PATH</CODE>. От том, как 
это сделать, см. раздел <A HREF="getstart.htm#1011960">"Локализация Компилятора"</A> 
в <a href="#1042057">Главе&nbsp;3, "Технология Разработки Приложений JavaScript."</a></p>
<p><A NAME="1075244"></A>
Вам нужно также добавить директорию <CODE>&lt;server_root&gt;/bin/httpd/lib</CODE> 
в <CODE>LD_LIBRARY_PATH</CODE> (или <CODE>LIBPATH</CODE>, или <CODE>SHLIB_PATH</CODE> 
на Unix-платформах), либо <CODE>&lt;server_root&gt;/bin/https/bin</CODE> в <CODE>PATH</CODE> 
на Windows NT-платформах.</p>
<p><A NAME="1046524"></A>
Вам нужно компилировать только те страницы, которые содержат серверный JavaScript 
или оба - клиентский и серверный JavaScript. Вам не нужно компилировать 
страницы, содержащие только клиентский JavaScript. Вы, конечно, можете сделать 
это, но скорость работы будет выше, если Вы оставите страницы с клиентским JavaScript без компиляции.</p>
<p><A NAME="1046528"></A>
Компилятор доступен из командной строки. Используйте следующий синтаксис 
командной строки для компиляции и компоновки приложений JavaScript на сервере:</A></p>
<PRE><A NAME="1055250"></A>jsac [-h] [-c] [-v] [-d] [-l]<br>&nbsp;&nbsp;&nbsp;[-o <I>outfile</I>.web]<br>&nbsp;&nbsp;&nbsp;[-i <I>inputFile</I>]<br>&nbsp;&nbsp;&nbsp;[-p <I>pathName</I>]<br>&nbsp;&nbsp;&nbsp;[-f <I>includeFile</I>]<br>&nbsp;&nbsp;&nbsp;[-r <I>errorFile</I>]<br>&nbsp;&nbsp;&nbsp;[-a 1.2]<br>&nbsp;&nbsp;&nbsp;<I>script1</I>.html [...<I>scriptN</I>.html]
&nbsp;&nbsp;&nbsp;[<I>funct1</I>.js ... <I>functN</I>.js]</PRE><p><A NAME="1055251"></A>
Элементы в квадратных скобках не обязательны. Синтаксис дан на нескольких 
строках для большей ясности. Файлы <CODE>script</CODE><I><CODE>N</CODE></I><CODE>.html</CODE> 
и <CODE>funct</CODE><I><CODE>N</CODE></I><CODE>.js</CODE> это входные файлы для 
компилятора. Должен быть как минимум один HTML-файл. По умолчанию файлы HTML и JavaScript 
ищутся в текущей директории. Специфицируемые Вами файлы обязаны быть JavaScript- 
или HTML-файлы; Вы не можете специфицировать другие файлы, такие, например, как .GIF.</p>
<p><A NAME="1046533"></A>На всех платформах Вы можете использовать тире (<CODE>-</CODE>) или слэш (<CODE>/</CODE>) 
для обозначения опций командной строки. То есть, следующие строки эквивалентны:</p>
<PRE><A NAME="1070529"></A>jsac -h<br>jsac /h</PRE><p><A NAME="1070540"></A>
Заметьте, что, поскольку слэш обозначает опции командной строки, входной файл не 
может начинаться с символа / (слэш) для обозначения абсолютного пути (в
Unix). Таким образом, следующий вызов неверен:</p>
<PRE><A NAME="1070552"></A>jsac -o myapp.web /usr/vpg/myapp.html</PRE>
<p><A NAME="1070541"></A>Это ограничение не распространяется на путь, который Вы предоставляете как 
аргумент командной строки; только на входные файлы. В NT Вы можете использовать 
обратный слэш (<CODE>\</CODE>) для указания абсолютного пути во входном файле, 
как в следующем вызове:</p>
<PRE><A NAME="1070555"></A>jsac -o myapp.web \usr\vpg\myapp.html</PRE>
<p><A NAME="1070560"></A>
В Unix Вы обязаны использовать опцию командной строки <CODE>-i</CODE> для 
специфицирования абсолютного пути, как описано ниже.</p>
<p><A NAME="1070553"></A>Доступны следующие опции командной строки:</p>
<ul><LI><A NAME="1061138"></A>
<CODE>-h</CODE>: Помощь по синтаксису компилятора. Если Вы используете эту опцию, 
не указывайте никаких других.</LI><LI><A NAME="1046534"></A>
<CODE>-c</CODE>: Синтаксис только проверяется; web-файл не генерируется. Если 
эта опция указана, опцию <CODE>-o</CODE> указывать не нужно.</LI><LI><A NAME="1046535"></A>
<CODE>-v</CODE>: (Verbose) Выводит информацию о работе компилятора.</LI><LI><A NAME="1046536"></A>
<CODE>-d</CODE>: Выводит генерируемое JavaScript-содержимое.</LI><LI><A NAME="1068722"></A>
<CODE>-l</CODE>: Специфицирует набор символов, используемый при компиляции (такой 
как <CODE>iso-8859-1</CODE>, <CODE>x-sjis</CODE> или <CODE>euc-kr</CODE>)</LI>.<LI><A NAME="1046538"></A>
<CODE>-o</CODE> <I><CODE>outfile</CODE></I>: Создаёт web-файл в формате 
байт-кода с именем <CODE>outfile.web</CODE>. Если эта опция не указана, 
компилятор не генерирует web-файл. (Опускайте эту опцию только тогда, когда 
используете опцию <CODE>-c</CODE> для проверки синтаксиса или <CODE>-h</CODE> 
для получения помощи.)</LI><LI><A NAME="1061239"></A>
<CODE>-i</CODE> <I><CODE>inputFile</CODE></I>: Позволяет специфицировать входной 
файл с полным путём, а не с относительным путём. Для этой опции может быть 
задано только имя файла. Если Вам нужно специфицировать несколько файлов с 
полным путём, используйте опцию <CODE>-f</CODE>.</LI><LI><A NAME="1061240"></A>
<CODE>-p </CODE><I><CODE>pathName</CODE></I>: Специфицирует корневую директорию 
для всех относительных путей, используемых при компиляции. (Используйте перед 
опцией <CODE>-f</CODE>.) Для этой опции можно указать только один путь.</LI><LI><A NAME="1057457"></A>
<CODE>-f </CODE><I><CODE>includeFile</CODE></I>: Специфицирует файл, который 
является списком входных файлов, что позволяет обойти ограничение на 
количество символов, вводимых в командной строке. Для этой опции можно указать 
только одно имя файла. Файлы в списке входных файлов в <I><CODE>includeFile</CODE></I>&nbsp; 
разделены пробелами. Если имя файла содержит пробел, Вы обязаны заключить имя 
файла в двойные кавычки.</LI><LI><A NAME="1054678"></A>
<CODE>-r </CODE><I><CODE>errorFile</CODE></I>:&nbsp; Перенаправляет стандартный 
вывод (включая сообщения об ошибках) в специфицированный файл. В этой опции 
можно указать только одно имя файла.</LI><LI><A NAME="1056320"></A>
<CODE>-a 1.2</CODE>: Устанавливает версию в 1.2 для обеспечения обратной совместимости.</LI>
</ul><p><A NAME="1061208"></A>
Например, следующая команда компилирует и компонует две HTML -страницы с 
JavaScript, <CODE>main.html</CODE> и <CODE>hello.html</CODE>, и файл серверного JavaScript, <CODE>support.js</CODE>, 
создавая двоичный исполняемый файл с именем <CODE>myapp.web</CODE>. Кроме того, 
в процессе компиляции компилятор печатает в командной строке информацию о ходе компиляции.</p>
<PRE><A NAME="1047280"></A>jsac -v -o myapp.web main.html hello.html support.js</PRE>
<p><A NAME="1050809"></A>
В следующем примере команда компилирует файлы, перечисленные в файле <CODE>looksee.txt</CODE>, 
в бинарный исполняемый файл под названием <CODE>looksee.web</CODE>:</p>
<PRE><A NAME="1046547"></A>jsac -f looksee.txt -o looksee.web</PRE>
<p><A NAME="1046577"></A>
Здесь <CODE>looksee.txt</CODE> может содержать:</p>
<PRE><A NAME="1052597"></A>looksee1.html<br>looksee2.html<br>\myapps\jsplace\common.js<br>looksee3.html</PRE>
<h4>
<A NAME="Installing a New Application"></A><A NAME="1043531"></A>
Установка Нового Приложения</h4>
<HR><p><A NAME="1061273"></A>
Вы не можете запустить приложение, и клиенты не могут получить к нему доступ, 
пока Вы не установите его. Инсталяция приложения идентифицирует его на сервере. 
После установки Вы можете перестроить/rebuild и запустить приложение любое число 
раз. Приложение нужно переустановить только тогда, когда Вы его удалили. Вы 
можете установить до 120 приложений JavaScript на один сервер.</p>
<p><A NAME="1061274"></A>Прежде чем устанавливать, Вы обязаны поместить все файлы, имеющие отношение к 
приложению, в соответствующую директорию путём публикации файлов. Иначе Вы 
получите сообщение об ошибке при попытке инсталяции. Из соображений безопасности, 
Вы можете не захотеть публиковать свои исходные файлы JavaScript на сервер 
публикации. См. в разделе <A HREF="#1043564">"URL Приложения"</A> об ограничениях на размещение файлов.</p>
<p><A NAME="1052813"></A>Чтобы установить новое приложение с помощью Application Manager, щёлкните Add Application. 
В ответ Application Manager выведет в правом фрэйме форму, показанную на
<A HREF="#1056717">Рисунке 3.4</A>. (Цветовая схема в Enterprise Server 4.0 будет другой).</p>
<h6><A NAME="1056717"></A>Рисунок 3.4&nbsp;&nbsp;&nbsp;  Форма Add Application</h6>
<P><IMG SRC="graphics/Appmgr.gif" width="806" height="665"></P>
<p><A NAME="1043538"></A>Заполните поля в форме Add Application следующим образом:</p>
<ul><LI><A NAME="1043540"></A>
<I>Name:</I> имя приложения. Это имя идентифицирует URL приложения. Например, 
имя приложения Hello World это "world," а URL приложения - это <CODE>http://</CODE><I><CODE>server.domain</CODE></I><CODE>/world</CODE>. 
Это необходимое поле, и имя, которое Вы запишете, обязано отличаться от имён 
других приложений на данном сервере. См. <A HREF="#1043564">"URL Приложения"</A>.</LI><LI><A NAME="1055729"></A>
<I>Web File Path:</I> полное путево&#x0301;е имя web-файла приложения. Это поле 
необходимо. Например, если сервер Netscape установлен в директории <CODE>c:\nshome</CODE>, 
путь web-файла для приложения Hello World будет
<a href="file:///c:/nshome/js/samples/world/hello.web."> <CODE>c:\nshome\js\samples\world\hello.web</CODE>.</a><LI><A NAME="1055731"></A>
<I>Default Page:</I> страница по умолчанию, которая загружается машиной выполнения JavaScript, 
если пользователь не специфицировал конкретную страницу в 
URL. Эта страница аналогична <CODE>index.html</CODE> для стандартного URL.</LI><LI><A NAME="1043547"></A>
<I>Initial Page:</I> начальная страница, которая выполняется машиной выполнения JavaScript, 
когда Вы запускаете приложение в Application Manager. Эта страница выполняется 
точно один раз при запуске приложения. Она обычно используется для 
инициализации значений, создания блокировок/locks и установления соединения с 
БД. Любой исходный JavaScript на этой странице не может использовать 
предопределённые объекты <CODE>request</CODE> или <CODE>client</CODE>. Это необязательное поле.</LI><LI><A NAME="1061319"></A>
<I>Built-in Maximum Database Connections</I>: значение по умолчанию - 
максимальное количество соединений с БД, которое может иметься в данном 
приложении в один момент времени через использование предопределённого объекта <CODE>database</CODE>. 
Код JavaScript может переопределить это значение путём вызова метода <CODE>database.connect</CODE>.</LI><LI><A NAME="1061321"></A>
<I>External Libraries:</I> пути к внешним библиотекам, используемым в приложении. 
Если Вы специфицируете несколько библиотек, разделите имена запятыми или 
точкой с запятой. Это поле по выбору/optional. Библиотеки, установленные для 
одного приложения, могут использоваться всеми приложениями на данном сервере. 
См. <A HREF="misc.htm#1026725">"Работа с Внешними Библиотеками"</A>.</LI><LI><A NAME="1055219"></A>
<I>Client Object Maintenance:</I> <VAR style="font-style: normal">техника, 
используемая для сохранения свойств объекта </VAR><CODE>client</CODE>. Это 
может быть клиентская &quot;кука&quot;/cookie, URL клиента, IP сервера, серверная кука 
или URL сервера. См. <A HREF="sessmgmt.htm#1036896">"Техника Работы с Объектом client"</A>.</LI></ul>
<p><A NAME="1043561"></A>После того как Вы предоставили всю требуемую информацию, нажмите Enter для 
инсталяции приложения, Reset для очистки всех полей или Cancel для отмены операции.</p>
<p><A NAME="1043563"></A>Вы обязаны остановить и рестартовать сервер после добавления или изменения 
внешних библиотек. Вы можете рестартовать сервер из Server Manager; см. 
руководство администратора сервера.</p>
<h4><A NAME="Head2;"></A><A NAME="1043564"></A>URL Приложения</h4><HR><p><A NAME="1043565"></A>
При установке приложения Вы обязаны задать ему имя. Это имя определяет базовый URL<I> </I>
приложения<i>:</i> тот URL, который клиенты используют для доступа к странице по 
умолчанию данного приложения JavaScript.<br>
Базовый URL приложения имеет форму:</p>
<PRE><A NAME="1043567"></A>http://<I>server.domain/appName</I></PRE>
<p><A NAME="1043568"></A>
Здесь <I>server</I> это имя HTTP-сервера, <I>domain</I> это домен Internet (включая 
субдомены), а <I>appName</I> это имя приложения, которое Вы ему дали при 
инсталяции. Отдельные страницы приложения достигаются через URL приложения в форме:</p>
<PRE><A NAME="1051243"></A>http://<I>server.domain/appName/page.</I>html</PRE>
<p><A NAME="1051224"></A>
Здесь <I>page</I> это имя страницы приложения. Например, если Ваш сервер 
называется <CODE>coyote</CODE>, а домен имеет имя <CODE>royalairways.com</CODE>, 
базовый URL для приложения <CODE>hangman</CODE> будет:</p>
<PRE><A NAME="1043570"></A>http://coyote.royalairways.com/hangman</PRE>
<p><A NAME="1043571"></A>
Если клиент запрашивает этот URL, сервер генерирует HTML для страницы по 
умолчанию приложения и высылает её клиенту. URL приложения страницы winning в 
этом приложении:</p>
<PRE><A NAME="1061356"></A>http://coyote.royalairways.com/hangman/youwon.html</PRE>
<h6><A NAME="1043572"></A>Важно!<A NAME="1057824"></A></h6>
<p>Прежде чем инсталировать приложение, убедитесь, что выбранное Вами имя 
приложения не присвоило существующий URL на Вашем сервере. Машина выполнения JavaScript 
направляет все клиентские запросы по URL, соответствующим URL приложения, в 
директорию, специфицированную для web-файла. Таким образом можно &quot;обмануть&quot; 
нормальную корневую директорию.<br>
<A NAME="1057825"></A>Например, предположим, клиент запрашивает URL, который начинается с префикса 
из предыдущего примера:</p>
<PRE><A NAME="1057826"></A>http://coyote.royalairways.com/hangman</PRE>
<p><A NAME="1043577"></A>
В этом случае машина выполнения на сервере ищет документ в директории <CODE>samples\hangman</CODE>, 
а не в нормальной корневой директории сервера. Сервер обслуживает в этой 
директории страницы, которые не компилируются в приложение.</p>
<p><A NAME="1053045"></A>
Вы можете поместить Ваши исходные (неоткомпилированные) файлы серверного JavaScript 
в ту же директорию, что и web-файл; однако Вы должны делать это только для 
отладки. Если Вы публикуете Ваше приложение для общего пользования, Вы, по 
соображениям безопасности, 
не должны публиковать неоткомпилированные файлы серверного JavaScript.</p>
<h4><A NAME="Controlling Access to an Application"></A><A NAME="1043589"></A>
Управление Доступом к Приложению</h4>
<HR><p><A NAME="1043590"></A>
При инсталяции приложения Вам может понадобиться ограничить к нему доступ 
пользователей, особенно если приложение предоставляет доступ к закрытой информации.</p>
<p><A NAME="1048273"></A>Если Вы работаете на рабочем сервере за брандмауэром/firewall, то можете не 
беспокоиться об ограничении доступа в процессе разработки приложения. Удобно не 
иметь ограничений доступа в процессе разработки приложения, так как Вы можете 
быть уверены в защищённости приложения от атак за стеной firewall. Если Вы 
используете учебные данные на стадии разработки, то риск ещё меньше. Однако, 
если Вы публикуете Ваше приложение, Вы должны быть уверены, что любой посетитель 
Вашего приложения может им пользоваться.</p>
<p><A NAME="1048220"></A>Если Вы закончили разработку и готовы опубликовать приложение, необходимо 
предусмотреть его защиту. Вы можете ограничить доступ, применив к приложению 
стиль конфигурации сервера. О стилях конфигурации см. руководство администратора Вашего web-сервера.</p>
<h4><A NAME="Modifying an Application"></A><A NAME="1043597"></A>Модификация Приложения</h4>
<HR><p><A NAME="1043599"></A>
Чтобы модифицировать приложение, выберите имя приложения в списке приложений и щёлкните Modify.</p>
<p><A NAME="1043600"></A>Вы можете изменить любое поле, определённое при инсталяции приложения, за 
исключением имени приложения. Чтобы изменить имя приложения, необходимо удалить 
приложение, а затем реинсталировать его.</p>
<p><A NAME="1043602"></A>Если Вы модифицируете поля остановленного приложения, Application Manager 
автоматически запускает его. Если Вы модифицируете поля активного приложения, Application Manager 
автоматически останавливает и запускает его.</p>
<h4><A NAME="Removing an Application"></A><A NAME="1043603"></A>Удаление Приложения</h4>
<HR><p><A NAME="1043605"></A>
Чтобы удалить приложение, выберите его в списке приложений и щёлкните Remove. Application Manager 
удалит приложение, и оно больше не сможет быть запущено на сервере. Клиенты не 
смогут больше получить доступ к приложению. Если Вы удалите приложение, а после 
этого захотите запустить его, нужно будет инсталировать его заново.</p>
<p><A NAME="1061382"></A>Хотя клиенты потеряют доступ к приложению, удаление его с помощью Application Manager 
не удаляет физически файлы приложения с сервера. Если Вы хотите полностью удалить файлы, сделайте это вручную.</p>
<h4><A NAME="Starting, Stopping, and Restarting an Application"></A><A NAME="1043609"></A>
Старт, Остановка и Рестарт Приложения</h4>
<HR><p><A NAME="1048339"></A>
После инсталяции приложения его можно запустить на выполнение. Выберите 
приложение в списке приложений и щёлкните Start. Если приложение запущено 
успешно, его статус изменяется со Stopped на Active.</p>
<p><A NAME="1048341"></A>Вы можете запустить приложение, загрузив его URL:</p>
<PRE><A NAME="1048342"></A>http://<I>server.domain</I>/appmgr/control.html?name=<I>appName</I>&amp;cmd=start</PRE>
<p><A NAME="1048343"></A>
Здесь <I>appName</I> это имя приложения. Вы не можете изменить этот URL, если не 
имеете привилегий доступа к Application Manager.</p>
<p><A NAME="1048543"></A>Чтобы остановить приложение и сделать его таким образом недоступным для 
пользователей, выберите имя приложения в списке приложений и щёлкните Stop. 
Статус приложения изменится на Stopped, и клиенты не смогут запускать его. Вы 
обязаны остановить приложение, если хотите переместить web-файл или обновить 
приложение с рабочего сервера на конечном сервере публикаций.</p>
<p><A NAME="1048557"></A>Вы можете также остановить приложение, загрузив следующий URL:</p>
<PRE><A NAME="1048484"></A>http://<I>server.domain</I>/appmgr/control.html?name=<I>appName</I>&amp;cmd=stop</PRE>
<p><A NAME="1057928"></A>
Здесь <I>appName</I> это имя приложения. Вы не можете изменить этот URL, если не 
имеете привилегий доступа к Application Manager.</p>
<p><A NAME="1057926"></A>Вы обязаны рестартовать приложение каждый раз после его перестроения/rebuild. 
Чтобы рестартовать активное приложение, выберите его в списке приложений и 
щёлкните Restart. Фактически рестарт реинсталирует приложение; программа ищет 
специфицированный web-файл. Если верного web-файла нет, Application Manager генерирует ошибку.</p>
<p><A NAME="1048346"></A>Вы можете также рестартовать приложение, загрузив следующий URL:</p>
<PRE><A NAME="1057957"></A>http://<I>server.domain</I>/appmgr/control.html?name=a<I>ppName</I>&amp;cmd=restart</PRE>
<p><A NAME="1057967"></A>
Здесь <I>appName</I> это имя приложения. Вы не можете изменить этот URL, если не 
имеете привилегий доступа к Application Manager.</p>
<h4><A NAME="Running an Application"></A><A NAME="1057959"></A>Запуск Приложения</h4>
<HR><p><A NAME="1057961"></A>
После инсталяции и компиляции приложения Вы можете запустить его двумя 
способами:</p><ul><LI><A NAME="1048879"></A>
Выбрать имя приложения в списке приложений и щёлкнуть Run. Application Manager 
откроет новое окно Navigator.</LI><LI><A NAME="1048880"></A>
Загрузить базовый URL приложения в Navigator, напечатав его в поле Location/Адрес.</LI>
</ul><p><A NAME="1048888"></A>
Сервер сгенерирует HTML для специфицированной страницы и вышлет его клиенту.</p><h4>
<A NAME="Debugging an Application"></A><A NAME="1046343"></A>Отладка Приложения</h4>
<HR><p><A NAME="1043628"></A>
Для отладки приложения сделайте следующее:</p><ul><LI><A NAME="1043633"></A>
Выбрать имя приложения в списке приложений и щёлкнуть Debug, как указано в 
разделе <A HREF="#1063138">"Использование Менеджера Приложений для Отладки"</A>.</LI><LI><A NAME="1043637"></A>
Загрузить URL отладки, как указано в разделе <A HREF="#1048788">"Использование URL Отладки"</A>.</LI></ul><p><A NAME="1063136"></A>
Можно использовать функцию <CODE>debug</CODE> для вывода отладочной информации, 
как описано в разделе <A HREF="#1048797">"Использование Функции debug"</A>.</p><p><A NAME="1070164"></A>
После запуска отладки приложения JavaScript Вы не сможете остановить или 
рестартовать его. В этих случаях&nbsp; Application Manager выдаст сообщение "Trace is active/Трассировка 
включена&quot;. Если это произойдёт, сделайте следующее:</p>
<OL><LI><A NAME="1070180"></A>
Закройте все окна отладки.</LI><LI><A NAME="1070183"></A>
Закройте все окна с данным приложением.</LI><LI><A NAME="1070187"></A>
В Application Manager выберите это приложение и щёлкните Run.</LI></OL><p><A NAME="1070188"></A>
Теперь Вы можете остановить и рестартовать это приложение.</p>
<h4><A NAME="Head2;"></A><A NAME="1063138"></A>Использование Менеджера 
Приложений/Application Manager для Отладки</h4><HR><p><A NAME="1048900"></A>
Для отладки приложения выберите его в списке приложений и щёлкните Debug. Application 
Manager 
откроет новое окно Navigator, в котором будет запущено приложение. Запустится 
также утилита трассировки в отдельном фрэйме, в окне, содержащем приложение, или 
вообще в другом окне. (Вы можете определить появление отладочного окна при 
конфигурировании установок по умолчанию для Application Manager, как описано в 
разделе <A HREF="#1046349">"Конфигурирование Установок по Умолчанию"</A>).</p>
<p><A NAME="1048781"></A>
Утилита трассировки выведет следующую отладочную информацию:</p><ul><LI><A NAME="1051282"></A>
значения свойств объектов и аргументов функций отладки, вызываемых приложением<LI><A NAME="1051283"></A>
значения свойств объектов <CODE>request</CODE> и <CODE>client</CODE> до и 
после генерации HTML для страницы<LI><A NAME="1061437"></A>
значения свойств объектов <CODE>project</CODE> и <CODE>server</CODE><LI><A NAME="1051293"></A>
индикацию присвоения новых значений свойствам<LI><A NAME="1051312"></A>
индикацию отправки машиной выполнения содержимого клиенту</LI></ul><p><A NAME="1048782"></A>
На <A HREF="#1056824">Рисунке 3.5</A> показано то, что Вы можете увидеть при 
отладке приложения Hangman.</p><h6><A NAME="1056824"></A>
Рисунок 3.5&nbsp;&nbsp;&nbsp;Отладка Приложения Hangman</h6>
<P><IMG SRC="graphics/debug.gif" width="514" height="560"></P><h4>
<A NAME="Head2;"></A><A NAME="1048788"></A>Использование URL Отладки</h4><HR><p><A NAME="1048790"></A>
Вместо Application Manager вам может больше подойти использование URL отладки 
приложения. Для отображения утилиты трассировки приложения в отдельном окне 
введите следующий URL:</p>
<PRE><A NAME="1048792"></A>http://<I>server.domain</I>/appmgr/trace.html?name=<I>appName</I></PRE>
<p><A NAME="1048793"></A>
Здесь <I>appName</I> это имя приложения. Для отображения утилиты трассировки в 
том же самом окне, что и окно приложения (но в отдельном кадре/фрэйме), введите URL 
в форме:</p>
<PRE><A NAME="1048794"></A>http://<I>server.domain</I>/appmgr/debug.html?name=<I>appName</I></PRE>
<p><A NAME="1048795"></A>
Вы не сможете воспользоваться двумя вышеуказанными&nbsp; URL, если не имеете 
прав для запуска Application Manager. Для удобства можно сделать закладку на URL отладки.</p>
<h4><A NAME="Head2;"></A><A NAME="1048797"></A>Использование Функции debug</h4>
<HR><p><A NAME="1069911"></A>
Вы можете использовать функцию <CODE>debug</CODE> в Вашем приложении JavaScript 
для помощи при отслеживании/трассировке проблем в приложении. Функция <CODE>debug</CODE> 
отображает значения для утилиты трассировки. Например, следующий оператор 
выводит значение свойства <CODE>guess</CODE> объекта <CODE>request</CODE> в окне 
трассировки вместе с некоторым идентифицирующим текстом:</p>
<PRE><A NAME="1048800"></A>debug ("Current Guess is ", request.guess);</PRE>
<h4><A NAME="Deploying an Application"></A><A NAME="1048911"></A>Публикация Приложения</h4>
<HR><p><A NAME="1048912"></A>После завершения разработки и тестирования приложения Вы можете опубликовать его 
и сделать доступным для предполагаемых пользователей. Это требует выполнения двух шагов:</A></p>
<ul><LI><A NAME="1048913"></A>
перемещения/копирования приложения с рабочего сервера на сервер публикаций, 
доступный конечным пользователям;<LI><A NAME="1048914"></A>
применения или изменения прав доступа к приложению.</LI></ul><p><A NAME="1048997"></A>
Вы должны скопировать web-файл приложения на сервер публикаций вместе с 
изображениям и неоткомпилированными файлами HTML и JavaScript, которые 
необходимы для работы приложения. О публикации файлов приложений см. 
дополнительно <I>Netshare and </I><EM>Web Publisher User's Guide.</EM></p>
<h6>ПРИМЕЧАНИЕ:</h6><p> <A NAME="1068766"></A>
В целом, по соображениям безопасности, Вы не должны публиковать файлы с исходным кодом.<br>
<A NAME="1048987"></A>В зависимости от приложения, Вы можете ограничить доступ для определённых 
пользователей или групп пользователей. В некоторых случаях любой пользователь 
может запускать приложение; тогда ограничений можно вообще не применять. Если 
приложение показывает специальную информацию или даёт доступ к файловой системе 
сервера, Вы должны предоставить доступ только авторизованным пользователям, 
имеющим соответствующие имена и пароли для входа.</p>
<p><A NAME="1049579"></A>Вы ограничиваете доступ к приложению, применяя стиль конфигурации сервера из 
Вашего Server Manager. Об использовании Server Manager и стилей конфигурации см. <I>Enterprise Server 4.0 Administrator's Guide</I>.</p>
<H2><A NAME="Application Manager Details"></A><A NAME="1043639"></A>Менеджер Приложений. Детали.</H2>
<HR><p><A NAME="1051569"></A>В этом разделе показано, как изменять установки по умолчанию для Application Manager. 
Кроме того, говорится о формате файла, в котором Application Manager хранит информацию.</p>
<h4><A NAME="Head2;"></A><A NAME="1046349"></A>Конфигурирование Установок по Умолчанию</h4>
<HR><p><A NAME="1069655"></A>
Чтобы конфигурировать установки по умолчанию для Application Manager, щёлкните Configure (в Enteprise Server 3.x) 
или Preferences (в Enterprise Server 4.0) в верхнем фрэйме Application Manager'а. 
В ответ Application Manager отобразит форму, показанную на <A HREF="#1073425">
Рисунке 3.6</A>.</p><p><A NAME="1069664"></A>
Вы можете специфицировать следующие значения по умолчанию:</p>
<ul><LI><A NAME="1061566"></A>
<I>Web File Path:</I> Путь по умолчанию к рабочей директории.</LI><LI><A NAME="1061567"></A>
<I>Default Page:</I> Имя по умолчанию для страницы по умолчанию в новом 
приложении.</LI><LI><A NAME="1061483"></A>
<I>Initial Page</I>: Имя по умолчанию для начальной страницы в новом приложении.</LI><LI><A NAME="1061578"></A>
<I>Built-in Maximum Database Connections:</I> Значение по умолчанию - 
максимальное количество соединений с базами данных, которые могут 
устанавливаться для предопределённого объекта <CODE>database</CODE>.</LI><LI><A NAME="1061579"></A>
<I>External Libraries:</I> Путь по умолчанию к директории с внешними 
исполняемыми библиотеками.</LI><LI><A NAME="1061580"></A>
<I>Client Object Maintenance:</I> Техника по умолчанию для обслуживания свойств объекта <CODE>client</CODE>.</LI>
</ul><p><A NAME="1061481"></A>
Если Вы устанавливаете новое приложение, используются значения полей по умолчанию в качестве начальных значений.</p>
<p><A NAME="1061465"></A>Дополнительно Вы можете специфицировать следующие установки:</p>
<ul><LI><A NAME="1043649"></A><I>Confirm on:</I> Требовать ли Вашего подтверждения для выполнения удаления, 
старта, остановки или рестарта приложения.</LI><LI><A NAME="1043651"></A>
<I>Debug Output:</I> Появляется ли окно трассировки, при отладке приложения, в 
том же окне, что и само приложение, но в отдельном кадре, или в отдельном от 
приложения окне.</LI><h6><A NAME="1073425"></A>
Рисунок 3.6&nbsp;&nbsp;&nbsp;  Форма &quot;Установки по Умолчанию&quot;</h6>
<P><IMG SRC="graphics/config.gif" width="655" height="720"></P></ul><h4>
<A NAME="Head2;"></A><A NAME="1043653"></A>За Кулисами</h4><HR><p><A NAME="1043654"></A>
Application Manager является удобным интерфейсом для модифицирования файла 
конфигурации <CODE>$NSHOME\https-</CODE><I><CODE>serverID</CODE></I><CODE>\config\jsa.conf</CODE>, 
где <CODE>$NSHOME</CODE> это директория, в которой установлен сервер, а <I>serverID</I> 
это идентификатор ID сервера. В случае фатальной ошибки Вам может потребоваться 
отредактировать этот файл самостоятельно. Вообще-то это не рекомендуется, но 
здесь мы даём информацию для такого случая.</p>
<p><A NAME="1058480"></A>Каждая строка файла <CODE>jsa.conf</CODE> соответствует приложению. Первый 
элемент каждой строки это имя приложения. Остальные элементы имеют формат <CODE>name=value</CODE>, 
где <CODE>name</CODE> это имя поля установки, а <CODE>value</CODE> это значение 
поля. Возможные значения <CODE>name</CODE>:</p>
<ul><LI><A NAME="1058481"></A>
<CODE>uri</CODE>: часть - имя приложения в базовом URL приложения</LI><LI><A NAME="1058482"></A>
<CODE>object</CODE>: путь к web-файлу приложения</LI><LI><A NAME="1043660"></A>
<CODE>home</CODE>: страница по умолчанию</LI><LI><A NAME="1043661"></A>
<CODE>start</CODE>: начальная страница приложения</LI><LI><A NAME="1061588"></A>
<CODE>maxdbconnect</CODE>: максимальное количество соединений с БД, разрешённое 
для предопределённого объекта <CODE>database</CODE></LI><LI><A NAME="1074277"></A>
<CODE>library</CODE>: пути к внешним библиотекам, разделённые запятыми или 
точкой с запятой</LI><LI><A NAME="1061592"></A>
<CODE>client-mode</CODE>: техника обслуживания объекта <CODE>client</CODE></LI>
</ul><p><A NAME="1043665"></A>
Файл <CODE>jsa.conf</CODE> имеет ограничение размера в 1024 строки, каждая 
строка может иметь не более 1024 символов. Если поля, введённые в Application Manager, 
превосходят этот лимит, строка усекается. Это ведёт обычно к потере последнего 
элемента, файлов внешних библиотек. Если это произошло, уменьшите количество 
используемых внешних библиотек и добавьте библиотеки в другие приложения. 
Поскольку установленные библиотеки доступны всем приложениям, любое приложение может использовать их.</p>
<p><A NAME="1054245"></A>Строка, начинающаяся с #, обозначает комментарий. Такая строка игнорируется. 
Можно также включать в файл пустые строки.</p>
<p><A NAME="1056364"></A>Не записывайте несколько строк, специфицируя одно и то же имя приложения. Это 
вызовет ошибки в работе Application Manager'а.</p>
<h5>
<a href="contents.htm">Оглавление</a> | <a href="getstart.htm">Назад</a>
| <a href="partfeat.htm">Вперёд</a>
| <a href="bklast.htm">Индекс</a></h5>
<hr><P ALIGN=right><FONT SIZE=-2><I>Дата 
последнего обновления: 29 сентября 1999 г.</I></FONT><P><FONT FACE="PrimaSans BT, Verdana, Sans-Serif" SIZE=-2>
© Copyright © 1999 Sun Microsystems, Inc. Некоторая часть Copyright © 1999 
Netscape Communications Corp. Все Права Зарезервированы.</FONT>
</BODY></HTML>