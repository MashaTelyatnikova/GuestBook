<!doctype HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Language" content="ru">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="css.css" type="text/css">
<TITLE>Введение.</TITLE></HEAD>
<BODY>
<h5><a href="contents.htm">Оглавление</a> | <a href="partbase.htm">Назад</a>
 | <a href="appdev.htm">Вперёд</a>
 | <a href="bklast.htm">Индекс</a><BR></h5><HR>
<h1>Глава 2<BR><A NAME="1013897"></a>Введение</h1>
<p><A NAME="1024062"></a>В этой главе дан обзор типичного приложения на языке 
&quot;Серверный JavaScript&quot; и показано, как настроить систему для разработки 
серверных приложений.</p>
<p><A NAME="1024063"></a>В главе имеются следующие разделы:</p>
<ul><LI><A NAME="1024072"></a>
<A HREF="#1015788">Архитектура Приложений JavaScript</A></LI><LI><A NAME="1024102"></a>
<A HREF="#1015788"></A><A HREF="#1015788"></A><a href="#1006633">Системные 
  Требования</a></LI><LI><A NAME="1024115"></a>
<A HREF="#1015788"></A><A HREF="#1015788"></A><a href="#1011926">Информация 
  Конфигурации</a></LI></ul>
<H2><A NAME="Architecture of JavaScript Applications"></A><A NAME="1015788"></a>
Архитектура Приложений JavaScript</H2><hr>
<p><A NAME="1021168"></a>
Как уже говорилось, приложения JavaScript имею части, работающие на стороне 
клиента и на сервере. Кроме того, многие приложения JavaScript используют LiveWire Database Service 
для соединения приложения с реляционной базой данных. Исходя из этого, Вы можете 
представить приложения JavaScript как имеющие трёхслойную клиент-серверную 
архитектуру, как показано на <A HREF="#1021174">Рисунке 2.1</A>.</p>
<h6><A NAME="1021174"></a>Рисунок 2.1&nbsp;&nbsp;&nbsp;Архитектура среды 
клиент-серверного приложения на языке JavaScript</h6>
<P>
<IMG SRC="graphics/Archenv.gif" width="378" height="375"></P>
<p>
<A NAME="1021175"></a>Три слоя - это:</p>
<ul><LI><A NAME="1015897"></a>
<I>WWW-клиенты (такие как Netscape Navigator-клиенты):</I> Этот слой 
  предоставляет приложению межплатформенный интерфейс конечного пользователя. 
  Этот слой может также содержать некоторую логику приложения, такую как правила 
  проверки данных, реализованные в клиентском JavaScript. Клиенты могут 
  находиться внутри или за пределами прокси-сервера корпоративной сети.</LI><LI><A NAME="1012548"></a>
<I>Netscape WWW-сервер/БД клиент: </I>Этот слой состоит из Netscape-сервера с 
  включённым
JavaScript. Он содержит логику приложения, обслуживает безопасность и контролирует 
  доступ к приложению нескольких пользователей, используя серверный JavaScript. 
  Этот слой позволяет клиентам как в пределах действия, так и за пределами прокси-сервера 
  иметь доступ к приложению. WWW -сервер также работает как клиент с любым 
  установленным сервером БД.</LI><LI><A NAME="1012550"></a>
<I>Серверы баз данных:</I> Этот слой состоит из SQL-серверов БД, работающих 
  обычно на высокопроизводительных рабочих станциях. Он содержит все данные БД, 
  метаданные и правила ссылочной целостности/referential integrity, необходимые 
  для работы приложения. Этот слой обычно находится в зоне действия 
  прокси-сервера корпоративной сети и может предоставлять слой безопасности 
  дополнительно к слою безопасности WWW -сервера. Netscape Enterprise Server 
  поддерживает использование серверов БД: ODBC, DB2, Informix, Oracle и Sybase. Netscape
FastTrack Server поддерживает только ODBC. Дополнительно о LiveWire Database Service 
  см.
<A HREF="partlw.htm#996796">Часть 3, "Служба LiveWire Database Service."</A></LI></ul>
<p><A NAME="1012554"></a>
Клиентская среда JavaScript работает как часть WWW -клиентов, а серверная среда JavaScript 
работает как часть Netscape web-сервера с доступом к одному или более серверов 
БД.
<A HREF="#1015826">Рисунок 2.2</A> показывает более детально, как серверная 
среда JavaScript и приложения, созданные для неё, встраиваются в Netscape web-сервер.</p>
<p>
<A NAME="1023242"></a>Верхняя часть <a href="#1015826">Рисунка 2.2</a> 
демонстрирует то, как серверный JavaScript
встраивается в Netscape web-сервер. Внутри web-сервера среда работы серверного JavaScript 
состоит из трёх основных компонентов, перечисленных ниже. JavaScript Application Manager 
работает поверх серверного JavaScript, как это делается в образце приложения, 
предоставленном Netscape
(таком как приложение <CODE>videoapp</CODE>), и в любом приложении, созданном 
Вами.</p>
<h6><A NAME="1015826"></a>
Рисунок 2.2&nbsp;&nbsp;&nbsp;Серверный JavaScript в среде Netscape-сервера</h6>
<P>
<IMG SRC="graphics/Archapp.gif" width="474" height="269"></P>
<p>
<A NAME="1016231"></a>Имеются три главных компонента среды работы JavaScript:</p>
<ul><LI><A NAME="1016262"></a><I>Библиотека времени выполнения JavaScript:</I> 
  этот компонент предоставляет базовую функциональность
JavaScript. Примером может служить Session Management Service, которая 
  предоставляет предопределённые объекты для помощи в обслуживании Вашего 
  приложения и совместного использования информации клиентом и сервером и несколькими приложениями. Служба Session Management Service описана в
<A HREF="sessmgmt.htm#1036383">Главе 6, "Служба Session Management Service&quot;</A>.</LI><LI><A NAME="1016239"></a><I>
  Библиотека LiveWire доступа к БД:</I> Этот компонент расширяет базовую 
  функциональность серверного JavaScript классами и объектами, которые 
  предоставляют аналогичный доступ к внешним серверам БД. Это описано в <A HREF="partlw.htm#996796">
  Части 3, "Служба LiveWire
Database Service."</A></LI><LI><A NAME="1016246"></a>
<I>Виртуальная машина Java (ВМ):</I> В отличие от других компонентов, ВМ Java 
  используется не только в JavaScript; любое Java-приложение, запущенное на 
  сервере, использует эту ВМ. ВМ
Java была доработана для того, чтобы дать приложениям JavaScript возможность 
  получать доступ к Java-классам через использование LiveConnect 
  -функциональности JavaScript. LiveConnect описана в
<A HREF="lc.htm#1008305">Главе 14, "LiveConnect. Обзор."</A></LI></ul>
<p><A NAME="1016142"></a>
В целом приложение на JavaScript может содержать операторы, интерпретируемые 
клиентом (интерпретатором
JavaScript, предоставляемым Netscape Navigator'ом или 
некоторыми другими web-браузерами) и сервером (машиной выполнения JavaScript, 
уже рассмотренной).</p>
<p><A NAME="1013179"></a>
Когда вы запускаете приложение JavaScript, происходят различные действия: 
некоторые на сервере, и некоторые - на клиенте.
Хотя конечному пользователю не обязательно знать все детали, Вам как 
разработчику приложения необходимо понимать, что происходит "под капотом."</p>
<p><A NAME="1012558"></a>
При создании приложения Вы пишете HTML-страницы, которые могут содержать 
операторы серверного и клиентского
JavaScript. В исходном коде HTML клиентский JavaScript находится в тэгах
<CODE>SCRIPT</CODE>, а серверный JavaScript - в тэгах <CODE>SERVER</CODE>.</p>
<p><A NAME="1012561"></a>
Вы можете также писать файлы, содержащие только операторы JavaScript без тэгов HTML. 
Такой JavaScript-файл может содержать либо клиентский, либо серверный JavaScript; 
один файл не может содержать и клиентские, и серверные объекты или функции.</p>
<p><A NAME="1024451"></a>
JavaScript VM (Виртуальная Машина), используемая в Netscape Enterprise Server 4.0, 
реализует значительные улучшения для обработки локальных переменных (то есть 
переменных, которые объявлены внутри функции), по сравнению с NES 3.6. 
Соответственно, рекомендуется минимизировать использование глобальных переменных (переменных 
между тэгами <CODE>&lt;server&gt;</CODE> и <CODE>&lt;/server&gt;</CODE>) и 
переписать приложения для использования функций там, где это возможно. Это 
значительно повысит производительность приложения.</p>
<p><A NAME="1012562"></a>
Если файлы HTML и JavaScript содержат серверный JavaScript, Вы затем 
компилируете их в единый исполняемый файл приложения
JavaScript. Этот файл называется web-файлом и имеет расширение
<CODE>.web</CODE>. Компилятор приложений JavaScript развёртывает HTML-код в 
платформонезависимые байт-коды, разбирая и компилируя операторы серверного JavaScript.</p>
<p><A NAME="1012564"></a>
Наконец, Вы публикуете Ваше приложение на Вашем web-сервере и используете JavaScript Application Manager 
для инсталяции и запуска приложения, чтобы пользователи могли получить к нему 
доступ.</p>
<p><A NAME="1012565"></a>
На этапе прогона, когда клиент запрашивает страницу приложения серверного JavaScript, 
машина выполнения локализует представление этого файла в web-файле приложения. 
Она запускает весь найденный серверный код и создаёт HTML-страницу для отправки 
клиенту. Эта страница может содержать как обычные тэги HTML, так и операторы 
клиентского JavaScript. Весь серверный код запускается на сервере до отправки 
страницы клиенту и до выполнения любого HTML или клиентского JavaScript. 
Соответственно, Ваш серверный код не может использовать клиентские объекты, так 
же как и клиентский код не может использовать серверные объекты.</p>
<p>
<A NAME="1012777"></a>Дополнительно см. <A HREF="jsserv.htm#997386">Главу 5, "Основы 
Серверного JavaScript."</A></p>
<H2><A NAME="System Requirements"></A><A NAME="1006633"></a>Системные Требования</H2>
<hr>
<p><A NAME="1006642"></a>
Чтобы разрабатывать приложения JavaScript, использующие преимущества и 
клиентского, и серверного JavaScript,
Вам нужна подходящая среда для разработки и публикации. В целом рекомендуется 
разрабатывать приложения на системе, отделённой от сервера публикации, поскольку 
разработка потребляет много ресурсов (порты соединений, пропускная способность, 
время процессора и память).
При разработке также может быть нарушена работа уже опубликованных приложений 
конечного пользователя.</p>
<p>
<A NAME="1006892"></a>Среда разработки JavaScript состоит из:</p>
<ul><LI><A NAME="1006894"></a><i>Утилит </i>для авторизации и компиляции 
  приложений JavaScript.
  Эти утилиты обычно находятся на машине разработчика.</LI><LI><A NAME="1008846"></a>
  <I>Машины разработчика с web-сервером </I>для запуска приложений JavaScript, 
  находящихся в стадии разработки.</LI><LI><A NAME="1008848"></a> <I>Машины 
  публикации с web-сервером </I>для публикации разработанных приложений. 
  Конечные пользователи осуществляют доступ к приложениям, находящимся на этом 
  сервере.</LI></ul>
<p><A NAME="1006942"></a>
Необходимые утилиты:</p>
<ul><LI><A NAME="1006972"></a>
  Браузер с возможностью выполнения JavaScript, такой как Netscape Navigator, 
  входящий в состав Netscape Communicator.</LI><LI><A NAME="1007014"></a>
  Компилятор приложений JavaScript, такой как компилятор web-серверов Netscape.</LI><LI><A NAME="1008788"></a>
  Редактор, такой как Emacs или Notepad.</LI>
</ul>
<p><A NAME="1006944"></a>Публикация и машины публикации требуют наличия 
следующего программного обеспечения:</p>
<ul><LI><A NAME="1007035"></a>Web-сервера;</LI><LI><A NAME="1006668"></a>
  Машины выполнения JavaScript, такой как машина web-серверов Netscape.</LI><LI><A NAME="1006685"></a>
  Возможности конфигурирования Вашего сервера для работы приложений JavaScript, 
  как это сделано в JavaScript Application Manager, поставляемом вместе с 
  web-серверами Netscape.</LI></ul>
<p><A NAME="1006744"></a>
Кроме того, если ваше приложение использует JavaScript-службу LiveWire Database Service, 
Вам понадобится:</p>
<ul><LI><A NAME="1006729"></a>Программа - сервер реляционных БД на Вашей 
  машине-сервере БД.
  См. документацию вашего сервера БД. В некоторых случаях Вам понадобится 
  установить web-сервер и сервер БД на одной машине. О специфических требованиях 
  серверного JavaScript см. <A HREF="dbconfig.htm#1055577">Главу 10, "Конфигурирование 
  Базы Данных."</A></LI><LI><A NAME="1006736"></a>Клиент БД и сетевое 
  программное обеспечение на машине Вашего web-сервера.
  Если Вы используете одну машину и как сервер БД, и как web-сервер, типичное 
  клиентское обеспечение БД как правило уже установлено при установке сервера БД. 
  В противном случае Вам нужно удостовериться, что клиент БД установлен на той 
  же машине, что и web-сервер, чтобы можно было иметь доступ к БД как клиент. О 
  требованиях к клиентскому программному обеспечению см. дополнительно 
  документацию поставщика БД.</LI></ul><H2><A NAME="Configuration Information"></A>
<A NAME="1011926"></a>Информация Конфигурации</H2><hr>
<p><A NAME="1011940"></a>В этом разделе рассматривается информация конфигурации 
для использования серверного JavaScript. Дополнительно о настройке БД для работы 
с сервисом LiveWire Database Service см.
<A HREF="dbconfig.htm#1055577">Главу 10, "Конфигурирование Базы Данных."</A></p>
<h4><A NAME="Head2;"></A><A NAME="1011945"></a>Подключение Серверного JavaScript</h4>
<hr>
<p>
<A NAME="1011946"></a>Чтобы запускать приложения JavaScript на Вашем сервере, Вы 
обязаны подключить машину выполнения JavaScript
в вашем Server Manager, щёлкнув Programs, а затем выбрав серверный JavaScript.
После появления промпта "Activate the JavaScript application environment/Активизировать 
среду приложений JavaScript ?&quot; выберите Yes и щёлкните OK. У Вас спросят также 
об ограничении доступа к Application Manager. Дополнительно см. <A HREF="#1012700">"Защита Application Manager'а."</A></p>
<BLOCKQUOTE>
  <p><B>ПРИМЕЧАНИЕ: </B><A NAME="1011951"></a>
  Если Вы не подключите машину выполнения JavaScript, приложения JavaScript не 
  смогут запускаться на этом сервере.</p>
</BLOCKQUOTE>
<p>
<A NAME="1024421"></a>Чтобы использовать и сервлеты, и LiveWire, Вам необходимо 
подключить серверный JavaScript
до подключения Java. Оба могут быть подключены через использование меню программ Administration Server'а. 
Если Вы модифицируете путь к классам/classpath в <CODE>obj.conf</CODE>, Ваши 
изменения будут утеряны, если Вы подключите/отключите серверный JavaScript или Java 
из программного меню Administration Server'а. 
Альтернативой редактирования директивы classpath в <CODE>obj.conf</CODE> 
является установка переменной окружения
<CODE>CLASSPATH</CODE> в Unix или установка переменной <CODE>CLASSPATH</CODE> в 
установках System в Windows NT. Если Вам нужно редактировать <CODE>obj.conf</CODE> 
непосредственно, сохраните первоначальный файл на всякий случай. В Enterprise Server 
4.0 Вы должны добавить <CODE>CLASSPATH</CODE> info в файлы конфигурации JVM (<CODE>jvm12.conf</CODE> 
для Solaris и NT) через интерфейс Enterprise
Administration Server.</p>
<p><A NAME="1024349"></a>
Как только Вы активируете среду приложений JavaScript, Вы обязаны остановить и 
рестартовать Ваш web-сервер, чтобы ассоциированные переменные окружения начали 
действовать. Если этого не сделать, приложения JavaScript, использующие службу LiveWire Database Service, 
работать не будут.</p>
<h4><A NAME="Head2;"></A>
<A NAME="1012700"></a>Защита Application Manager'а</h4>
<hr>
<p>
<A NAME="1012701"></a>Application Manager предоставляет контроль над 
приложениями JavaScript.
В связи с его особыми возможностями Вы должны защитить его от неавторизованного 
доступа. Если Вы не ограничиваете доступ к Application Manager'у, 
любой может добавлять, удалять, изменять, стартовать и останавливать приложения 
на Вашем сервере. Это, естественно, может привести к нежелательным последствиям.</p>
<p><A NAME="1012702"></a>
Вы (разработчик приложений на JavaScript) должны иметь права доступа для 
использования Application Manager'а на сервере 
разработчика, так как Вы используете его для работы с приложением при разработке. 
Администратор Вашего web-сервера, однако, может не предоставить Вам таких прав 
на сервере разработчика.</p>
<p>
<A NAME="1012703"></a>Если Вы подключите машину выполнения JavaScript в Server Manager'е, 
промпт спросит Вас, ограничивать ли доступ к Application Manager'у. 
Выберите Yes и щёлкните OK.
(Yes - по умолчанию.) После этого любой, кто попытается получить доступ к Application Manager'у, 
обязан будет ввести имя пользователя и пароль
Server Manager'а, чтобы получить возможность 
использовать Application Manager и приложение-образец <CODE>dbadmin</CODE>. 
Дополнительно см. руководство администратора для Вашего web-сервера.</p>
<p>
<A NAME="1012708"></a>Если Ваш сервер не использует Secure Sockets Layer (SSL), 
имя пользователя и пароль для Application Manager'а 
передаются по сети в некодированном виде. Перехватив эти данные, можно получить 
доступ к Application Manager'у. Если Вы используете 
тот же самый пароль для Вашего сервера администратора, хакер получит также 
контроль и над этим сервером. Следовательно, можно рекомендовать не использовать Application Manager 
вне прокси-сервера, если Вы не используете SSL.
О том, как подключить SSL к серверу, см. справочник администратора Вашего web-сервера.</p>
<h4><A NAME="Head2;"></A><A NAME="1011954"></a>Установки для LiveConnect</h4>
<hr>
<p><A NAME="1018850"></a>
Чтобы использовать Java-классы в LiveConnect, Вам нужно установить CLASSPATH 
сервера. Полное описание этой процедуры дано в
<A HREF="http://home.netscape.com/eng/server/webserver/4.0/index.htm" TARGET="_top">Programmer's Guide
to Servlets</A> и в <A HREF="http://home.netscape.com/eng/server/webserver/4.0/index.htm" TARGET="_top">Netscape Enterprise Server Administrator's Guide</A>.</p>
<h4><A NAME="Head2;"></A><A NAME="1011960"></a>Локализация Компилятора</h4><hr>
<p><A NAME="1011961"></a>
Инсталяция Netscape-сервера не изменяет Вашу переменную окружения <CODE>PATH</CODE> 
для включения директории, в которой установлен компилятор приложений JavaScript. 
Если Вам необходим быстрый доступ к компилятору, Вы обязаны модифицировать эту 
переменную.</p>
<p><A NAME="1011962"></a>
В системах Unix у Вас есть выбор способов изменения переменной окружения <CODE>PATH</CODE>. 
Можно добавить <CODE>$NSHOME/bin/https/lib</CODE>, где <CODE>$NSHOME</CODE> это 
директория, в которой установлен Ваш сервер. Поговорите с Вашим системным 
администратором о том, как это сделать.</p>
<p>
<A NAME="1011963"></a>Чтобы изменить системный путь NT, запустите Control Panel, 
найдите диалоговое окно System и установите переменную <CODE>PATH</CODE> в 
разделе Environment settings, включив в неё
<CODE>%NSHOME%\bin\https\bin</CODE>, где <CODE>NSHOME</CODE> это директория, в 
которой установлен Ваш сервер.</p>
<p><A NAME="1011964"></a>Если вы переместили компилятор JavaScript-приложений в 
другое место, Вы обязаны добавить эту новую директорию в переменную <CODE>PATH</CODE>.</p>
<h5><a href="contents.htm">Оглавление</a> | <a href="partbase.htm">Назад</a>
| <a href="appdev.htm">Вперёд</a>
| <a href="bklast.htm">Индекс</a></h5>
<hr><P ALIGN=right><FONT SIZE=-2><I>Дата последнего обновления: 29 сентября 1999 г.</I></FONT><P><FONT FACE="PrimaSans BT, Verdana, Sans-Serif" SIZE=-2>
&copy; Copyright © 1999 Sun Microsystems, Inc. Некоторая часть Copyright 
© 1999 Netscape Communications Corp. Все Права Зарезервированы.</FONT></BODY></HTML>